{"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftcrossui\/observableobject"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"title":"ObservableObject","role":"symbol","modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Protocol","externalID":"s:12SwiftCrossUI16ObservableObjectP","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60","fileName":"ObservableObject.swift"}},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"anchor":"Instance-Properties","generated":true}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"},{"kind":"text","text":" : AnyObject"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The default implementation only publishes changes made to properties that"},{"type":"text","text":" "},{"type":"text","text":"have been wrapped with the "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference"},{"type":"text","text":" property wrapper. Even properties"},{"type":"text","text":" "},{"type":"text","text":"that themselves conform to "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"type":"text","text":" must be wrapped with the"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference"},{"type":"text","text":" property wrapper for clarity."}],"type":"paragraph"},{"syntax":"swift","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"],"type":"codeListing"},{"inlineContent":[{"text":"To use an observable object as part of a view’s state, use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" property","type":"text"},{"text":" ","type":"text"},{"text":"wrapper. It’ll detect that it’s been given an observable and will forward any","type":"text"},{"text":" ","type":"text"},{"text":"observations published by the object’s ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","isActive":true,"type":"reference"},{"text":" publisher.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"],"type":"codeListing"}]}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"role":"symbol","title":"Cancellable","url":"\/documentation\/swiftcrossui\/cancellable","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","kind":"symbol","type":"topic","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"title":"Publisher","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","navigatorTitle":[{"text":"Publisher","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/published","title":"Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","role":"symbol","title":"ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","kind":"symbol","title":"Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"type":"topic","role":"symbol","required":true,"title":"didChange","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","abstract":[{"type":"text","text":"A publisher which publishes changes made to the object. Only publishes changes made to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"type":"text","text":" properties by default."}],"defaultImplementations":1},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","url":"\/documentation\/swiftcrossui\/state"}}}