{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"abstract":[{"text":"A view which attempts to persist the state of its view subtree even","type":"text"},{"text":" ","type":"text"},{"text":"when the subtree’s structure changes. Uses state serialization (via","type":"text"},{"text":" ","type":"text"},{"text":"view graph snapshotting) to persist view state even when a child","type":"text"},{"text":" ","type":"text"},{"text":"view’s implementation gets swapped out with an implementation from","type":"text"},{"text":" ","type":"text"},{"text":"a newly-loaded dylib (this is what makes this useful for hot reloading).","type":"text"}],"sections":[],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/init(_:)-80rbw","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/init(_:)-85pqu"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/body"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/View-Implementations"]}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","interfaceLanguage":"swift"},"metadata":{"title":"HotReloadableView","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/HotReloadableView.swift#L11","fileName":"HotReloadableView.swift"},"externalID":"s:12SwiftCrossUI17HotReloadableViewV","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"modules":[{"name":"SwiftCrossUI"}],"symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"role":"symbol"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftCrossUI\/s8SendableP","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"]}],"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"Only expected to be used directly by SwiftCrossUI itself or third","type":"text"},{"text":" ","type":"text"},{"text":"party libraries extending SwiftCrossUI’s hot reloading capabilities.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/hotreloadableview"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"title":"ViewUpdateResult","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","role":"symbol","title":"ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","kind":"symbol","type":"topic","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","url":"\/documentation\/swiftcrossui\/view-graph","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/init(_:)-80rbw":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","title":"init(_:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/init(_:)-80rbw","kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview\/init(_:)-80rbw","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/View-Implementations":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/View-Implementations","type":"topic","url":"\/documentation\/swiftcrossui\/hotreloadableview\/view-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"View Implementations"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"url":"\/documentation\/swiftcrossui\/optionalview","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","kind":"symbol","type":"topic","title":"OptionalView","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"title":"ViewSize","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","title":"HotReloadableView","role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"kind":"symbol","role":"symbol","title":"body","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"required":true,"abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"title":"DynamicProperty","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","title":"Scene graph","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/published","title":"Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"url":"\/documentation\/swiftcrossui\/view","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"title":"View","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"abstract":[{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" values nested within an "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper when needed."}],"title":"PublishedMarkerProtocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/body":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9EmptyViewV","text":"EmptyView"}],"role":"symbol","title":"body","kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview\/body","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/body"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"title":"ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"role":"symbol","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","title":"AnyWidget","kind":"symbol","url":"\/documentation\/swiftcrossui\/anywidget","type":"topic","role":"symbol","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","title":"EitherView","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/eitherview","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/SwiftCrossUI\/s8SendableP","title":"Swift.Sendable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"title":"EmptyView","navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"url":"\/documentation\/swiftcrossui\/emptyview","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/init(_:)-85pqu":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/init(_:)-85pqu","type":"topic","url":"\/documentation\/swiftcrossui\/hotreloadableview\/init(_:)-85pqu","role":"symbol","abstract":[],"kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}