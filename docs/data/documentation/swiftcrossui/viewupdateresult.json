{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewupdateresult"]}],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)"],"title":"Type Methods","generated":true,"anchor":"Type-Methods"}],"metadata":{"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"externalID":"s:12SwiftCrossUI16ViewUpdateResultV","modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewUpdateResult.swift#L1","fileName":"ViewUpdateResult.swift"},"roleHeading":"Structure","symbolKind":"struct","title":"ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"role":"symbol"},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/preferences":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"preferences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PreferenceValues","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/preferences","role":"symbol","kind":"symbol","type":"topic","title":"preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/leafView(size:)":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leafView","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","text":"ViewUpdateResult","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)","title":"leafView(size:)","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"role":"symbol","title":"LayoutSystem","url":"\/documentation\/swiftcrossui\/layoutsystem","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"title":"AnyWidget","url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"abstract":[],"kind":"article","title":"Scene graph","type":"topic","url":"\/documentation\/swiftcrossui\/scene-graph","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"url":"\/documentation\/swiftcrossui\/viewsize","type":"topic","title":"ViewSize","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"title":"DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"url":"\/documentation\/swiftcrossui\/eitherview","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","kind":"symbol","abstract":[{"type":"text","text":"A view used by "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"type":"text","text":" to support if\/else conditional statements."}],"type":"topic","title":"EitherView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol","title":"ViewUpdateResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/optionalview","title":"OptionalView","kind":"symbol","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph","abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","kind":"article"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/participatesInStackLayouts":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participatesInStackLayouts"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","title":"participatesInStackLayouts","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"title":"EmptyView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true,"type":"reference"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"type":"topic","url":"\/documentation\/swiftcrossui\/emptyview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:preferences:)":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)","type":"topic","title":"init(size:preferences:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preferences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PreferenceValues","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"kind":"text","text":")"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/size":{"url":"\/documentation\/swiftcrossui\/viewupdateresult\/size","abstract":[],"title":"size","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:childResults:preferencesOverlay:)":{"url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)","title":"init(size:childResults:preferencesOverlay:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"childResults"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","kind":"typeIdentifier","text":"ViewUpdateResult"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"preferencesOverlay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","kind":"typeIdentifier","text":"PreferenceValues"},{"kind":"text","text":"?)"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"url":"\/documentation\/swiftcrossui\/view","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","navigatorTitle":[{"kind":"identifier","text":"View"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"navigatorTitle":[{"kind":"identifier","text":"Published"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"role":"symbol","title":"PublishedMarkerProtocol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" values nested within an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper when needed.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"title":"body","url":"\/documentation\/swiftcrossui\/view\/body","abstract":[{"type":"text","text":"The view’s contents."}],"role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"role":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"title":"ViewBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewbuilder","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"}}}