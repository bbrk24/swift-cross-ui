{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/SwiftCrossUI\/SQ"],"kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"The width and height components of the view’s minimum and maximum sizes are","type":"text"},{"text":" ","type":"text"},{"text":"stored separately to make it extra clear that they don’t always form some","type":"text"},{"text":" ","type":"text"},{"text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds","type":"text"},{"text":" ","type":"text"},{"text":"may only be achievable along a single axis at a time.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"metadata":{"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8","fileName":"ViewSize.swift"},"roleHeading":"Structure","role":"symbol","externalID":"s:12SwiftCrossUI8ViewSizeV","symbolKind":"struct","modules":[{"name":"SwiftCrossUI"}],"title":"ViewSize"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"anchor":"Instance-Properties"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"anchor":"Type-Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"anchor":"Default-Implementations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewsize"]}],"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","title":"PublishedMarkerProtocol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" values nested within an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper when needed."}],"navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"title":"Scene graph","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/swiftcrossui\/scene-graph","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"title":"EitherView","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"type":"text","text":" to support if\/else conditional statements."}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/eitherview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"type":"topic","abstract":[{"text":"The view update result for an empty view.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","title":"empty","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/empty","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}]},"doc://SwiftCrossUI/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftCrossUI\/SQ","title":"Swift.Equatable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"kind":"symbol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"type":"topic","title":"ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"role":"symbol","kind":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewbuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","title":"ViewBuilder","navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"type":"topic","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maximumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"kind":"symbol","type":"topic","title":"maximumHeight","url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","abstract":[{"text":"The maximum height that the view can take (if its width remains the same).","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","kind":"symbol","role":"symbol","title":"minimumHeight","abstract":[{"text":"The minimum height that the view can take (if its width remains the same).","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","title":"idealWidthForProposedHeight","kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","abstract":[{"text":"The width that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed height doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":").","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier"}],"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","required":true,"url":"\/documentation\/swiftcrossui\/view\/body","kind":"symbol","title":"body","abstract":[{"text":"The view’s contents.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"navigatorTitle":[{"kind":"identifier","text":"Published"}],"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"role":"symbol","abstract":[{"text":"The size that the view ideally wants to take up.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","title":"idealSize","kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"url":"\/documentation\/swiftcrossui\/viewsize\/hidden","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","role":"symbol","abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}],"title":"hidden"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"type":"topic","role":"collectionGroup","url":"\/documentation\/swiftcrossui\/view-graph","kind":"article","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"title":"OptionalView","url":"\/documentation\/swiftcrossui\/optionalview","role":"symbol","type":"topic","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","role":"symbol","abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"type":"topic","title":"minimumWidth"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","title":"init(fixedSize:)","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fixedSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">)"}],"type":"topic","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"role":"symbol","type":"topic","title":"participateInStackLayoutsWhenEmpty","abstract":[{"text":"Whether the view should participate in stack layouts when empty.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"abstract":[{"text":"The view’s ideal aspect ratio, computed from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","isActive":true,"type":"reference"},{"text":". If","type":"text"},{"text":" ","type":"text"},{"text":"either of the view’s ideal dimensions are 0, then the aspect ratio","type":"text"},{"text":" ","type":"text"},{"text":"defaults to 1.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","type":"topic","title":"idealAspectRatio","url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealAspectRatio","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"title":"AnyWidget","type":"topic","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","role":"symbol","url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","type":"topic","title":"ViewSize","abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"type":"topic","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/dynamicproperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","title":"DynamicProperty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","type":"topic","url":"\/documentation\/swiftcrossui\/view","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"url":"\/documentation\/swiftcrossui\/layoutsystem","title":"LayoutSystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"abstract":[],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult","title":"ViewUpdateResult","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"kind":"article","abstract":[],"type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","title":"Equatable Implementations"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","kind":"symbol","title":"maximumWidth","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"The maximum width that the view can take (if its height remains the same).","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"url":"\/documentation\/swiftcrossui\/emptyview","title":"EmptyView","type":"topic","abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"url":"\/documentation\/swiftcrossui\/viewsize\/size","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The size that the view now takes up."}],"title":"size","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","type":"topic","title":"idealHeightForProposedWidth","url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","kind":"symbol","abstract":[{"text":"The height that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed width doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"type":"codeVoice","code":"Text"},{"type":"text","text":")."}]}}}