{"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/SQ","doc:\/\/SwiftCrossUI\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"variants":[{"paths":["\/documentation\/swiftcrossui\/viewsize"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The width and height components of the view’s minimum and maximum sizes are","type":"text"},{"text":" ","type":"text"},{"text":"stored separately to make it extra clear that they don’t always form some","type":"text"},{"text":" ","type":"text"},{"text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds","type":"text"},{"text":" ","type":"text"},{"text":"may only be achievable along a single axis at a time.","type":"text"}]}],"kind":"content"}],"metadata":{"roleHeading":"Structure","externalID":"s:12SwiftCrossUI8ViewSizeV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"title":"ViewSize","modules":[{"name":"SwiftCrossUI"}],"role":"symbol","symbolKind":"struct","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8","fileName":"ViewSize.swift"}},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"abstract":[{"text":"The view update result for an empty view.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/empty","title":"empty","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}],"kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"abstract":[{"text":"The maximum width that the view can take (if its height remains the same).","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"title":"maximumWidth","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}],"type":"topic","title":"hidden","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/hidden","abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"title":"ViewSize","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","url":"\/documentation\/swiftcrossui\/view-graph","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"idealSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"minimumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"minimumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"maximumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"participateInStackLayoutsWhenEmpty","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"title":"ViewUpdateResult","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","role":"symbol","title":"participateInStackLayoutsWhenEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Whether the view should participate in stack layouts when empty."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"url":"\/documentation\/swiftcrossui\/view","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"title":"View","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"title":"init(fixedSize:)","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fixedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"title":"idealWidthForProposedHeight","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","type":"topic","abstract":[{"text":"The width that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"proposed height doesn’t change. Only really differs from "},{"type":"codeVoice","code":"idealSize"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"type":"codeVoice","code":"Text"},{"type":"text","text":")."}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"role":"symbol","title":"idealAspectRatio","kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","abstract":[{"type":"text","text":"The view’s ideal aspect ratio, computed from "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize"},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"either of the view’s ideal dimensions are 0, then the aspect ratio"},{"type":"text","text":" "},{"type":"text","text":"defaults to 1."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealAspectRatio"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"title":"minimumHeight","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","abstract":[{"type":"text","text":"The minimum height that the view can take (if its width remains the same)."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","abstract":[{"type":"text","text":"The height that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"type":"text","text":"proposed width doesn’t change. Only really differs from "},{"code":"idealSize","type":"codeVoice"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"code":"Text","type":"codeVoice"},{"type":"text","text":")."}],"title":"idealHeightForProposedWidth","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"abstract":[{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" values nested within an "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper when needed."}],"title":"PublishedMarkerProtocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","url":"\/documentation\/swiftcrossui\/viewsize\/size","abstract":[{"text":"The size that the view now takes up.","type":"text"}],"title":"size","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"role":"symbol","title":"maximumHeight","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"The maximum height that the view can take (if its width remains the same)."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">","kind":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","title":"idealSize","abstract":[{"type":"text","text":"The size that the view ideally wants to take up."}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","type":"topic","kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","role":"symbol","title":"ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/published","title":"Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"title":"ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"role":"symbol","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"minimumWidth","abstract":[{"type":"text","text":"The minimum width that the view can take (if its height remains the same)."}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","title":"EitherView","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/eitherview","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","kind":"symbol","type":"topic","role":"collection"},"doc://SwiftCrossUI/s8SendableP":{"identifier":"doc:\/\/SwiftCrossUI\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"url":"\/documentation\/swiftcrossui\/optionalview","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","kind":"symbol","type":"topic","title":"OptionalView","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"kind":"symbol","role":"symbol","title":"body","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"required":true,"abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"title":"EmptyView","navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"url":"\/documentation\/swiftcrossui\/emptyview","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","kind":"article","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"title":"DynamicProperty","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","title":"HotReloadableView","role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","title":"Scene graph","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","role":"collectionGroup"},"doc://SwiftCrossUI/SQ":{"identifier":"doc:\/\/SwiftCrossUI\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","title":"AnyWidget","kind":"symbol","url":"\/documentation\/swiftcrossui\/anywidget","type":"topic","role":"symbol","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","kind":"symbol"}}}