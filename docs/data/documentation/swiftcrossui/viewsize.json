{"metadata":{"externalID":"s:12SwiftCrossUI8ViewSizeV","title":"ViewSize","remoteSource":{"fileName":"ViewSize.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8"},"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"roleHeading":"Structure","modules":[{"name":"SwiftCrossUI"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/SQ"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The width and height components of the view’s minimum and maximum sizes are"},{"type":"text","text":" "},{"type":"text","text":"stored separately to make it extra clear that they don’t always form some"},{"type":"text","text":" "},{"type":"text","text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds"},{"type":"text","text":" "},{"type":"text","text":"may only be achievable along a single axis at a time."}]}]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/viewsize"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"title":"minimumWidth","url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","type":"topic","title":"View graph","kind":"article","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"abstract":[{"text":"The maximum height that the view can take (if its width remains the same).","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","title":"maximumHeight","url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumHeight","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"title":"Scene graph","type":"topic","abstract":[],"url":"\/documentation\/swiftcrossui\/scene-graph","kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"title":"EmptyView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/emptyview","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","type":"topic","role":"symbol","abstract":[{"text":"Whether the view should participate in stack layouts when empty.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","title":"participateInStackLayoutsWhenEmpty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"participateInStackLayoutsWhenEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"type":"topic","title":"body","required":true,"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The view’s contents."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","defaultImplementations":1,"url":"\/documentation\/swiftcrossui\/view\/body"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"kind":"symbol","title":"OptionalView","url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"url":"\/documentation\/swiftcrossui\/eitherview","kind":"symbol","type":"topic","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"text":" to support if\/else conditional statements.","type":"text"}],"title":"EitherView","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","role":"collection","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fixedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","abstract":[],"title":"init(fixedSize:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"abstract":[{"type":"text","text":"The height that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"type":"text","text":"proposed width doesn’t change. Only really differs from "},{"code":"idealSize","type":"codeVoice"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"code":"Text","type":"codeVoice"},{"type":"text","text":")."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","title":"idealHeightForProposedWidth","url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"url":"\/documentation\/swiftcrossui\/viewbuilder","title":"ViewBuilder","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","type":"topic","abstract":[{"text":"The size that the view now takes up.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">","kind":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/size","title":"size","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"type":"topic","title":"DynamicProperty","kind":"symbol","url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"title":"PublishedMarkerProtocol","type":"topic","role":"symbol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The minimum height that the view can take (if its width remains the same)."}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","title":"minimumHeight","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"title":"View","navigatorTitle":[{"text":"View","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftcrossui\/view"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"idealSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"minimumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"minimumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"maximumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"participateInStackLayoutsWhenEmpty","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"},"doc://SwiftCrossUI/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftCrossUI\/SQ"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","type":"topic","title":"hidden","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/hidden","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}],"abstract":[{"type":"text","text":"The view update result for a hidden view. Differs from "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty"},{"type":"text","text":" "},{"type":"text","text":"by stopping hidden views from participating in stack layouts (i.e."},{"type":"text","text":" "},{"type":"text","text":"getting spacing between the previous child and the hidden child)."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","title":"empty","abstract":[{"type":"text","text":"The view update result for an empty view."}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/empty","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"kind":"symbol","abstract":[{"text":"The maximum width that the view can take (if its height remains the same).","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","title":"maximumWidth","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"title":"ObservableObject","role":"symbol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","role":"symbol","title":"idealWidthForProposedHeight","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","abstract":[{"type":"text","text":"The width that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"type":"text","text":"proposed height doesn’t change. Only really differs from "},{"type":"codeVoice","code":"idealSize"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"type":"codeVoice","code":"Text"},{"type":"text","text":")."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"title":"idealAspectRatio","url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealAspectRatio","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The view’s ideal aspect ratio, computed from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize"},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"either of the view’s ideal dimensions are 0, then the aspect ratio"},{"type":"text","text":" "},{"type":"text","text":"defaults to 1."}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","abstract":[],"type":"topic","kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"role":"symbol","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult","kind":"symbol","title":"ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"title":"AnyWidget","type":"topic","role":"symbol","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"title":"ViewSize","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewsize"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"kind":"symbol","abstract":[{"type":"text","text":"The size that the view ideally wants to take up."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","title":"idealSize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","url":"\/documentation\/swiftcrossui\/viewsize\/idealsize"}}}