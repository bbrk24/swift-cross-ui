{"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":" "},{"kind":"internalParam","text":"window"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","kind":"typeIdentifier","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","text":"Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Sets the handler for the window’s resizing events. "},{"type":"codeVoice","code":"action"},{"type":"text","text":" takes the proposed size"},{"type":"text","text":" "},{"type":"text","text":"of the window and returns the final size for the window (which allows SwiftCrossUI"},{"type":"text","text":" "},{"type":"text","text":"to implement features such as dynamic minimum window sizes based off the content’s"},{"type":"text","text":" "},{"type":"text","text":"minimum size). Setting the resize handler overrides any previous handler."}],"variants":[{"paths":["\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"setResizeHandler(ofWindow:to:)","symbolKind":"method","role":"symbol","remoteSource":{"fileName":"AppBackend.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L154"},"modules":[{"name":"SwiftCrossUI"}],"required":true,"externalID":"s:12SwiftCrossUI10AppBackendP16setResizeHandler8ofWindow2toy0J0Qz_ys5SIMD2VySiGctF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","kind":"typeIdentifier","text":"Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"roleHeading":"Instance Method"},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizeHandler(ofWindow:to:)":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setResizeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Window","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"setResizeHandler(ofWindow:to:)","abstract":[{"text":"Sets the handler for the window’s resizing events. ","type":"text"},{"code":"action","type":"codeVoice"},{"text":" takes the proposed size","type":"text"},{"text":" ","type":"text"},{"text":"of the window and returns the final size for the window (which allows SwiftCrossUI","type":"text"},{"text":" ","type":"text"},{"text":"to implement features such as dynamic minimum window sizes based off the content’s","type":"text"},{"text":" ","type":"text"},{"text":"minimum size). Setting the resize handler overrides any previous handler.","type":"text"}],"url":"\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)","kind":"symbol","required":true,"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"kind":"symbol","title":"AppBackend","role":"symbol","navigatorTitle":[{"text":"AppBackend","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppBackend","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/appbackend","abstract":[{"text":"A backend that can be used to run an app. Usually built on top of an","type":"text"},{"text":" ","type":"text"},{"text":"existing UI framework.","type":"text"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Window":{"url":"\/documentation\/swiftcrossui\/appbackend\/window","required":true,"abstract":[],"role":"symbol","title":"Window","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Window","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window"}}}