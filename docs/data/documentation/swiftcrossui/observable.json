{
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12SwiftCrossUI10ObservableP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Observable"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Observable"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "Observable"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Observable"
            },
            {
              "kind" : "text",
              "text" : " : AnyObject"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The default implementation only publishes changes made to properties that have been wrapped with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property wrapper. Even properties that themselves conform to ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "must be wrapped with the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property wrapper for clarity.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "class NestedState: Observable {",
            "    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s",
            "    \/\/ `didChange` publisher.",
            "    @Observed",
            "    var startIndex = 0",
            "",
            "    @Observed",
            "    var endIndex = 0",
            "}",
            "",
            "class CounterState: Observable {",
            "    \/\/ Only changes to `count` will be published (it is the only property with `@Observed`)",
            "    @Observed",
            "    var count = 0",
            "",
            "    var otherCount = 0",
            "",
            "    \/\/ Even though `nested` is `Observable`, its changes won't be published because without",
            "    \/\/ `@Observed`, the behaviour is unclear without looking at the definition of `NestedState`",
            "    var nested = NestedState()",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyAppState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewState"
      ],
      "title" : "States"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable\/didChange-4l6n9"
      ],
      "title" : "Instance Properties"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/observable"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux and Windows.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppState"
    }
  ],
  "role" : "symbol",
  "title" : "AppState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding": {
  "abstract" : [
    {
      "text" : "A value that can read and write a value owned by a source of truth. Can be thought of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a writable reference to the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "role" : "symbol",
  "title" : "Binding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/binding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable": {
  "abstract" : [
    {
      "text" : "Will run a ‘cancel’ action when the cancellable falls out of scope (gets",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinit’d by ARC). Protects against calling the action twice.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "role" : "symbol",
  "title" : "Cancellable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cancellable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyAppState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyAppState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyAppState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyAppState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyAppState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyappstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyState": {
  "abstract" : [
    {
      "text" : "The state to use for stateless apps and views.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptystate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observable": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "role" : "symbol",
  "title" : "Observable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observable/didChange-4l6n9": {
  "abstract" : [
    {
      "text" : "A publisher which publishes changes made to the object. Only publishes changes made to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " properties by default.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didChange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI9PublisherC",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable\/didChange-4l6n9",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "didChange",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observable\/didchange-4l6n9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observed": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If the wrapped value is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will also be forwarded to the wrapper’s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "role" : "symbol",
  "title" : "Observed",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observed"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewState"
    }
  ],
  "role" : "symbol",
  "title" : "ViewState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewstate"
}
}
}