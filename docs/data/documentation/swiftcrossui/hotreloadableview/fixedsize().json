{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/fixedSize()"},"kind":"symbol","metadata":{"extendedModule":"SwiftCrossUI","modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"fileName":"FixedSizeModifier.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Layout\/FixedSizeModifier.swift#L2"},"title":"fixedSize()","externalID":"s:12SwiftCrossUI4ViewPAAE9fixedSizeQryF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fixedSize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.fixedSize()","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/fixedsize()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fixedSize"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"title":"View","navigatorTitle":[{"text":"View","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftcrossui\/view"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/fixedSize()":{"title":"fixedSize()","kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview\/fixedsize()","role":"symbol","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/fixedSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fixedSize"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","role":"collection","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}]}}}