{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.fixedSize(horizontal:vertical:)"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"externalID":"s:12SwiftCrossUI4ViewPAAE9fixedSize10horizontal8verticalQrSb_SbtF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV","extendedModule":"SwiftCrossUI","roleHeading":"Instance Method","title":"fixedSize(horizontal:vertical:)","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Layout\/FixedSizeModifier.swift#L6","fileName":"FixedSizeModifier.swift"},"modules":[{"name":"SwiftCrossUI"}],"symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fixedSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"horizontal","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"vertical","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View","kind":"typeIdentifier"}]},"variants":[{"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/fixedsize(horizontal:vertical:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fixedSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"horizontal","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"vertical","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/fixedSize(horizontal:vertical:)"},"sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/fixedSize(horizontal:vertical:)":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/fixedSize(horizontal:vertical:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fixedSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"horizontal","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"vertical","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"title":"fixedSize(horizontal:vertical:)","type":"topic","url":"\/documentation\/swiftcrossui\/hotreloadableview\/fixedsize(horizontal:vertical:)","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","type":"topic","url":"\/documentation\/swiftcrossui\/view","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"}}}