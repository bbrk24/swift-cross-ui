{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDisappear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","text":"View"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" actions on outermost views are called first and propagate"},{"type":"text","text":" "},{"type":"text","text":"down to the leaf views due to essentially relying on the "},{"type":"codeVoice","code":"deinit"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"modifier view’s "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","isActive":true},{"type":"text","text":"."}]}]}],"abstract":[{"type":"text","text":"Adds an action to be performed after this view disappears."}],"metadata":{"extendedModule":"SwiftCrossUI","title":"onDisappear(perform:)","externalID":"s:12SwiftCrossUI4ViewPAAE11onDisappear7performQryyc_tF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDisappear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View"}],"remoteSource":{"fileName":"OnDisappearModifier.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Lifecycle\/OnDisappearModifier.swift#L7"},"modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)"},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"title":"SwiftCrossUI","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"url":"\/documentation\/swiftcrossui\/view","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","navigatorTitle":[{"kind":"identifier","text":"View"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/onDisappear(perform:)":{"role":"symbol","title":"onDisappear(perform:)","url":"\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDisappear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Adds an action to be performed after this view disappears."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode":{"url":"\/documentation\/swiftcrossui\/viewgraphnode","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","type":"topic","navigatorTitle":[{"text":"ViewGraphNode","kind":"identifier"}],"title":"ViewGraphNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewGraphNode"}],"kind":"symbol","abstract":[{"text":"A view graph node storing a view, its widget, and its children (likely a collection of more nodes).","type":"text"}],"role":"symbol"}}}