{"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"These concepts form the foundation of SwiftCrossUI’s reactivity.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference","isActive":true},{"type":"text","text":" property wrapper to store state within your apps, scenes,"},{"type":"text","text":" "},{"type":"text","text":"and views. State generally trickles down through your view hierarchies. Variables"},{"type":"text","text":" "},{"type":"text","text":"without the "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference","isActive":true},{"type":"text","text":" annotation aren’t reactive."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}]}],"kind":"content"}],"metadata":{"role":"collectionGroup","title":"State basics","modules":[{"name":"SwiftCrossUI"}],"roleHeading":"API Collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"sections":[],"kind":"article","topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"anchor":"Topics"}],"seeAlsoSections":[{"anchor":"State","title":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftcrossui\/state-basics"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"url":"\/documentation\/swiftcrossui\/cancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"role":"symbol","kind":"symbol","type":"topic","title":"Cancellable","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"title":"ObservableObject","role":"symbol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"abstract":[],"type":"topic","role":"collectionGroup","title":"Environment","kind":"article","url":"\/documentation\/swiftcrossui\/environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/swiftcrossui\/binding","type":"topic","title":"Binding","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","navigatorTitle":[{"text":"State","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/state","type":"topic","kind":"symbol","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"role":"collectionGroup","url":"\/documentation\/swiftcrossui\/preferences","type":"topic","kind":"article","abstract":[],"title":"Preferences","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","role":"collection","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"type":"topic","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","title":"Publisher","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/publisher","navigatorTitle":[{"kind":"identifier","text":"Publisher"}]}}}