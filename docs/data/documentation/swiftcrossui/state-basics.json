{"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"anchor":"Topics"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"These concepts form the foundation of SwiftCrossUI’s reactivity.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference"},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference"},{"text":" annotation aren’t reactive.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For situations where you need data to trickle back up again, use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},{"text":" ","type":"text"},{"text":"(think mutable references to state).","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/state-basics"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"seeAlsoSections":[{"title":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"generated":true,"anchor":"State"}],"metadata":{"modules":[{"name":"SwiftCrossUI"}],"roleHeading":"API Collection","title":"State basics","role":"collectionGroup"},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"url":"\/documentation\/swiftcrossui\/preferences","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences","kind":"article","abstract":[],"title":"Preferences","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"navigatorTitle":[{"kind":"identifier","text":"Published"}],"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"title":"Publisher","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/swiftcrossui\/environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","abstract":[],"title":"Environment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"title":"Cancellable","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"kind":"symbol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"type":"topic","title":"ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"kind":"symbol","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"url":"\/documentation\/swiftcrossui\/binding","title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"role":"symbol","url":"\/documentation\/swiftcrossui\/state","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"State"}],"title":"State","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"}}}