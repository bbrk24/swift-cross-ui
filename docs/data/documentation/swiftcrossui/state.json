{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)"]},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue"]},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"State"}],"roleHeading":"Structure","externalID":"s:12SwiftCrossUI5StateV","remoteSource":{"fileName":"State.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/State.swift#L8"},"role":"symbol","modules":[{"name":"SwiftCrossUI"}],"title":"State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}]}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/init(wrappedValue:)":{"abstract":[],"url":"\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)","kind":"symbol","title":"init(wrappedValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"type":"topic","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"navigatorTitle":[{"text":"Binding","kind":"identifier"}],"role":"symbol","title":"Binding","kind":"symbol","url":"\/documentation\/swiftcrossui\/binding","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"State"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"required":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","kind":"symbol","type":"topic","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier","text":"Content"}],"url":"\/documentation\/swiftcrossui\/view\/body","role":"symbol","defaultImplementations":1,"abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/projectedValue":{"abstract":[],"url":"\/documentation\/swiftcrossui\/state\/projectedvalue","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","kind":"symbol","title":"projectedValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"title":"ObservableObject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","role":"symbol","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"title":"Publisher","url":"\/documentation\/swiftcrossui\/publisher","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"navigatorTitle":[{"kind":"identifier","text":"Published"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","role":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"title":"Published","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/update(with:previousValue:)":{"url":"\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)","title":"update(with:previousValue:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"previousValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","preciseIdentifier":"s:12SwiftCrossUI5StateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/wrappedValue":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/swiftcrossui\/state\/wrappedvalue","abstract":[],"title":"wrappedValue","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"kind":"symbol","role":"collection","title":"SwiftCrossUI","type":"topic","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"title":"Cancellable","url":"\/documentation\/swiftcrossui\/cancellable","type":"topic","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","title":"DynamicProperty","kind":"symbol","type":"topic"}}}