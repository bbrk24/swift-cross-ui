{
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12SwiftCrossUI13ViewGraphNodeC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ViewGraphNode"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ViewGraphNode"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ViewGraphNode"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ViewGraphNode"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "NodeView"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Backend"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "NodeView"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12SwiftCrossUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Backend"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP",
              "text" : "AppBackend"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This is where updates are initiated when a viewâ€™s state updates, and where state is persisted",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "even when a view gets recomputed by its parent.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewGraphNodeChildren",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren"
      ],
      "title" : "Implementation Details"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/init(for:backend:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/backend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/children",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/view",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/widget"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/update()",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/update(with:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/viewgraphnode"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux and Windows.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyViewGraphNode": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used by implementations of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to avoid leaking the selected backend into ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations (which would be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an annoying complexity for users of the library and it worth the slight sacrifice",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in performance and strong-typing). The user never sees such type-erased wrappers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "AnyViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anyviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend": {
  "abstract" : [
    {
      "text" : "A backend that can be used to run an app (e.g. Gtk or Qt).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "role" : "symbol",
  "title" : "AppBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support if\/else conditional statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "role" : "symbol",
  "title" : "EitherView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/eitherview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView": {
  "abstract" : [
    {
      "text" : "A placeholder view used by elementary ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations which donâ€™t have bodies. Fatally",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "crashes if rendered.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a node with no children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewgraphnodechildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach": {
  "abstract" : [
    {
      "text" : "A view that displays a variable amount of children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "role" : "symbol",
  "title" : "ForEach",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/foreach"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support non-exhaustive if statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "role" : "symbol",
  "title" : "OptionalView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/optionalview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableBuilder": {
  "abstract" : [
    {
      "text" : "A result builder for constructing a tableâ€™s columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "TableBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablebuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView1": {
  "abstract" : [
    {
      "text" : "A view with exactly 1 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView1"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView2": {
  "abstract" : [
    {
      "text" : "A view with exactly 2 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView2"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View": {
  "abstract" : [
    {
      "text" : "A view that can be rendered by any backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "role" : "symbol",
  "title" : "View",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder": {
  "abstract" : [
    {
      "text" : "A result builder used to compose views together into composite views in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a declarative manner.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "ViewBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraph": {
  "abstract" : [
    {
      "text" : "The root of the view graph which shadows a root viewâ€™s structure with extra metadata,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "cross-update state persistence, and behind the scenes backend widget handling.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode": {
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/backend": {
  "abstract" : [
    {
      "text" : "The backend used to create the viewâ€™s widget.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "backend"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Backend"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/backend",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "backend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/backend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/children": {
  "abstract" : [
    {
      "text" : "The viewâ€™s children (usually just contains more view graph nodes, but can handle extra logic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "such as figuring out how to update variable length array of children efficiently).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "children"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI21ViewGraphNodeChildrenP",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/children",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "children",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/children"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/init(for:backend:)": {
  "abstract" : [
    {
      "text" : "Creates a node for a given view while also creating the nodes for its children, creating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the viewâ€™s widget, and starting to observe its state for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NodeView"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "backend"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Backend"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/init(for:backend:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(for:backend:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/init(for:backend:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/update()": {
  "abstract" : [
    {
      "text" : "Recomputes the viewâ€™s body, and updates its children and widget accordingly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/update()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/update()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/update(with:)": {
  "abstract" : [
    {
      "text" : "Replaces the nodeâ€™s view with a new version computed while recomputing the body of its parent",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(e.g. when its parentâ€™s state updates).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NodeView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/update(with:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(with:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/update(with:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/view": {
  "abstract" : [
    {
      "text" : "A copy of the view itself (from the latest computed body of its parent).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "view"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NodeView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/view",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "view",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/widget": {
  "abstract" : [
    {
      "text" : "The viewâ€™s single widget for the entirety of its lifetime in the view graph.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "widget"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Backend"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/widget",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "widget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode\/widget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a view graph node. This is implemented by a few different",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types for various purposes. E.g. variable length with same-typed elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "), and fixed length with distinctly-typed elements (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", etc).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren"
}
}
}