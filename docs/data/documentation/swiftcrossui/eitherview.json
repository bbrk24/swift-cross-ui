{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"metadata":{"modules":[{"name":"SwiftCrossUI"}],"title":"EitherView","role":"symbol","roleHeading":"Structure","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"symbolKind":"struct","externalID":"s:12SwiftCrossUI10EitherViewV","remoteSource":{"fileName":"EitherView.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/EitherView.swift#L2"},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView\/body"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView\/View-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftcrossui\/eitherview"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/s8CopyableP","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"title":"PublishedMarkerProtocol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" values nested within an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper when needed."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"url":"\/documentation\/swiftcrossui\/eitherview","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"type":"topic","title":"EitherView","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"title":"AnyWidget","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","abstract":[],"kind":"article","title":"Scene graph","role":"collectionGroup","type":"topic","url":"\/documentation\/swiftcrossui\/scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published","title":"Published","role":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView/View-Implementations":{"kind":"article","type":"topic","title":"View Implementations","url":"\/documentation\/swiftcrossui\/eitherview\/view-implementations","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView\/View-Implementations","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"kind":"symbol","role":"symbol","type":"topic","title":"View","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"url":"\/documentation\/swiftcrossui\/view","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","navigatorTitle":[{"kind":"identifier","text":"View"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}],"url":"\/documentation\/swiftcrossui\/optionalview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"type":"topic","kind":"symbol","title":"OptionalView","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"type":"text","text":" to support non-exhaustive if statements."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","kind":"symbol","type":"topic","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"type":"topic","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"title":"ViewUpdateResult","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"type":"topic","abstract":[{"text":"A view which attempts to persist the state of its view subtree even","type":"text"},{"text":" ","type":"text"},{"text":"when the subtree’s structure changes. Uses state serialization (via","type":"text"},{"text":" ","type":"text"},{"text":"view graph snapshotting) to persist view state even when a child","type":"text"},{"text":" ","type":"text"},{"text":"view’s implementation gets swapped out with an implementation from","type":"text"},{"text":" ","type":"text"},{"text":"a newly-loaded dylib (this is what makes this useful for hot reloading).","type":"text"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","type":"topic","navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"title":"ViewBuilder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"role":"symbol","title":"ViewSize","url":"\/documentation\/swiftcrossui\/viewsize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","title":"ObservableObject","type":"topic","role":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"role":"symbol","type":"topic","title":"EmptyView","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","url":"\/documentation\/swiftcrossui\/emptyview","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"title":"View graph","url":"\/documentation\/swiftcrossui\/view-graph","abstract":[],"kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","role":"collectionGroup","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","role":"symbol"},"doc://SwiftCrossUI/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/SwiftCrossUI\/s8CopyableP","type":"unresolvable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/view\/body","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content"}],"abstract":[{"type":"text","text":"The view’s contents."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","required":true,"defaultImplementations":1,"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView/body":{"kind":"symbol","type":"topic","title":"body","url":"\/documentation\/swiftcrossui\/eitherview\/body","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EmptyView","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9EmptyViewV"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView\/body","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"title":"DynamicProperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/dynamicproperty","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"type":"topic"}}}