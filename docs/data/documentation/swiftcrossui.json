{
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux and Windows.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "SwiftCrossUI",
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "SwiftCrossUI"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "SwiftCrossUI implements a simple API similar but not identical to SwiftUI, allowing you to use the basic concepts of SwiftUI to create a cross-platofrm desktop app. SwiftCrossUI is designed to be flexible and can work with different backends, but has a focus on using GTK+ through SwiftGTK.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Basic-Usage",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Examples"
      ],
      "title" : "Getting Started"
    },
    {
      "abstract" : [
        {
          "text" : "The top level of your app.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/App",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"
      ],
      "title" : "App Structure"
    },
    {
      "abstract" : [
        {
          "text" : "The wide variety of views available that you can combine to create complex UIs.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CellPosition",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationLink",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationPath",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationSplitView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationStack",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Table",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableColumn",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewContent",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack"
      ],
      "title" : "Views"
    },
    {
      "abstract" : [
        {
          "text" : "Objects that are read from and\/or written to as part of your app.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyAppState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewState",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewState"
      ],
      "title" : "States"
    },
    {
      "abstract" : [
        {
          "text" : "The detailed components that are part of the low level of SwiftCrossUI.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewGraphNodeChildren",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren"
      ],
      "title" : "Implementation Details"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DoubleConvertible",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservedMarkerProtocol",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Size",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Edge",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/InheritedOrientation",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowResizability"
      ],
      "title" : "Enumerations"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Swift"
      ],
      "title" : "Extended Modules"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux and Windows.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyViewGraphNode": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used by implementations of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to avoid leaking the selected backend into ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations (which would be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an annoying complexity for users of the library and it worth the slight sacrifice",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in performance and strong-typing). The user never sees such type-erased wrappers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "AnyViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anyviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget": {
  "abstract" : [
    {
      "text" : "A type-erased widget which can be stored without having to propagate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the selected backend type through the type system of the whole view graph",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system of types, which would leak it back into user view implementations",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "making the backend hard to switch for developers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "role" : "symbol",
  "title" : "AnyWidget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anywidget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/App": {
  "abstract" : [
    {
      "text" : "An application.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "App"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/App",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "App"
    }
  ],
  "role" : "symbol",
  "title" : "App",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/app"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend": {
  "abstract" : [
    {
      "text" : "A backend that can be used to run an app (e.g. Gtk or Qt).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "role" : "symbol",
  "title" : "AppBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppState"
    }
  ],
  "role" : "symbol",
  "title" : "AppState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Basic-Usage": {
  "abstract" : [
    {
      "text" : "The basics of setting up and using SwiftCrossUI.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Basic-Usage",
  "kind" : "article",
  "role" : "article",
  "title" : "Basic Usage",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/basic-usage"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding": {
  "abstract" : [
    {
      "text" : "A value that can read and write a value owned by a source of truth. Can be thought of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a writable reference to the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "role" : "symbol",
  "title" : "Binding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/binding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Button": {
  "abstract" : [
    {
      "text" : "A control that initiates an action.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "role" : "symbol",
  "title" : "Button",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/button"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable": {
  "abstract" : [
    {
      "text" : "Will run a ‘cancel’ action when the cancellable falls out of scope (gets",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinit’d by ARC). Protects against calling the action twice.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "role" : "symbol",
  "title" : "Cancellable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cancellable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CellPosition": {
  "abstract" : [
    {
      "text" : "The position of a cell in a table (with row and column numbers starting from 0).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CellPosition"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CellPosition",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CellPosition"
    }
  ],
  "role" : "symbol",
  "title" : "CellPosition",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cellposition"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Color": {
  "abstract" : [
    {
      "text" : "An RGBA representation of a color.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Color"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Color"
    }
  ],
  "role" : "symbol",
  "title" : "Color",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/color"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DoubleConvertible": {
  "abstract" : [
    {
      "text" : "A value convertible to and from a ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : ".`",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DoubleConvertible"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DoubleConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DoubleConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "DoubleConvertible",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/doubleconvertible"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Edge": {
  "abstract" : [
    {
      "text" : "Indicates a specific edge of a rectangle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Edge"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Edge",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Edge"
    }
  ],
  "role" : "symbol",
  "title" : "Edge",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/edge"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support if\/else conditional statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "role" : "symbol",
  "title" : "EitherView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/eitherview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyAppState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyAppState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyAppState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyAppState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyAppState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyappstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyState": {
  "abstract" : [
    {
      "text" : "The state to use for stateless apps and views.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptystate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView": {
  "abstract" : [
    {
      "text" : "A placeholder view used by elementary ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations which don’t have bodies. Fatally",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "crashes if rendered.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a node with no children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewgraphnodechildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewState"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Examples": {
  "abstract" : [
    {
      "text" : "An overview of the examples included with SwiftCrossUI.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Examples",
  "kind" : "article",
  "role" : "article",
  "title" : "Examples",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/examples"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach": {
  "abstract" : [
    {
      "text" : "A view that displays a variable amount of children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "role" : "symbol",
  "title" : "ForEach",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/foreach"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HStack": {
  "abstract" : [
    {
      "text" : "A view that arranges its subviews horizontally.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HStack"
    }
  ],
  "role" : "symbol",
  "title" : "HStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Image": {
  "abstract" : [
    {
      "text" : "A view that displays an image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "role" : "symbol",
  "title" : "Image",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/image"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/InheritedOrientation": {
  "abstract" : [
    {
      "text" : "The layout orientation inherited by a widget from its nearest oriented parent.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "InheritedOrientation"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/InheritedOrientation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "InheritedOrientation"
    }
  ],
  "role" : "symbol",
  "title" : "InheritedOrientation",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/inheritedorientation"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationLink": {
  "abstract" : [
    {
      "text" : "A navigation primitive that appends a value to the current navigation path on click.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationLink"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationLink",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationLink"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationLink",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationlink"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationPath": {
  "abstract" : [
    {
      "text" : "A type-erased list of data representing the content of a navigation stack.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationPath"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationPath"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationPath",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationpath"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationSplitView": {
  "abstract" : [
    {
      "text" : "A view that presents views in two or three columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationSplitView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationSplitView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationSplitView"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationSplitView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationsplitview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationStack": {
  "abstract" : [
    {
      "text" : "A view that displays a root view and enables you to present additional views over the root view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationStack"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observable": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "role" : "symbol",
  "title" : "Observable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observed": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If the wrapped value is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will also be forwarded to the wrapper’s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "role" : "symbol",
  "title" : "Observed",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observed"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservedMarkerProtocol": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values nested within an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object will only have their changes published by",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the parent ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " if marked with this marker protocol. This avoids uncertainty around which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "properties will or will not have their changes published by the parent. For clarity reasons, you",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "shouldn’t conform your own types to this protocol. Instead, apply the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " property",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "wrapper when needed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservedMarkerProtocol"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservedMarkerProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservedMarkerProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "ObservedMarkerProtocol",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observedmarkerprotocol"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support non-exhaustive if statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "role" : "symbol",
  "title" : "OptionalView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/optionalview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Picker": {
  "abstract" : [
    {
      "text" : "A control for selecting from a set of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "role" : "symbol",
  "title" : "Picker",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/picker"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene": {
  "abstract" : [
    {
      "text" : "A scene wraps a root view and dictates how it is displayed (e.g. in a window or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a menu bar). Scenes can also be a composition of multiple child scenes instead",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of wrapping a root view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "role" : "symbol",
  "title" : "Scene",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scene"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SceneBuilder": {
  "abstract" : [
    {
      "text" : "Builds an app’s root scene by composing other scenes together.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SceneBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SceneBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "SceneBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scenebuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SceneGraphNode": {
  "abstract" : [
    {
      "text" : "A persistent representation of a scene that maintains its state even when the scene",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "itself gets recomputed. Required to store view graphs and widget handles etc.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "SceneGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scenegraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ScrollView": {
  "abstract" : [
    {
      "text" : "A view that is scrollable when it would otherwise overflow available space. Use the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "View\/frame",
      "type" : "codeVoice"
    },
    {
      "text" : " modifier to constrain height if necessary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ScrollView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ScrollView"
    }
  ],
  "role" : "symbol",
  "title" : "ScrollView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scrollview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Size": {
  "abstract" : [
    {
      "text" : "A 2-dimensional size (in unspecified units).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Size"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Size",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Size"
    }
  ],
  "role" : "symbol",
  "title" : "Size",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/size"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Slider": {
  "abstract" : [
    {
      "text" : "A control for selecting a value from a bounded range of numerical values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "role" : "symbol",
  "title" : "Slider",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/slider"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Spacer": {
  "abstract" : [
    {
      "text" : "A flexible space that expands along the major axis of its containing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "stack layout, or on both axes if not contained in a stack.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Spacer"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Spacer"
    }
  ],
  "role" : "symbol",
  "title" : "Spacer",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/spacer"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Swift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Swift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/swift"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Table": {
  "abstract" : [
    {
      "text" : "A container that presents rows of data arranged in columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Table",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "role" : "symbol",
  "title" : "Table",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/table"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableBuilder": {
  "abstract" : [
    {
      "text" : "A result builder for constructing a table’s columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "TableBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablebuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableColumn": {
  "abstract" : [
    {
      "text" : "A column that displays a view for each row in a table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableColumn"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableColumn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableColumn"
    }
  ],
  "role" : "symbol",
  "title" : "TableColumn",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablecolumn"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Text": {
  "abstract" : [
    {
      "text" : "A text view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "role" : "symbol",
  "title" : "Text",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/text"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TextField": {
  "abstract" : [
    {
      "text" : "A control that displays an editable text interface.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "role" : "symbol",
  "title" : "TextField",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/textfield"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Toggle": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "role" : "symbol",
  "title" : "Toggle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/toggle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ToggleStyle": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ToggleStyle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ToggleStyle"
    }
  ],
  "role" : "symbol",
  "title" : "ToggleStyle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/togglestyle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VStack": {
  "abstract" : [
    {
      "text" : "A view that arranges its subviews vertically.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VStack"
    }
  ],
  "role" : "symbol",
  "title" : "VStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/vstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView1": {
  "abstract" : [
    {
      "text" : "A view with exactly 1 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView1"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView10": {
  "abstract" : [
    {
      "text" : "A view with exactly 10 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView10"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView2": {
  "abstract" : [
    {
      "text" : "A view with exactly 2 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView2"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView3": {
  "abstract" : [
    {
      "text" : "A view with exactly 3 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView3"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView4": {
  "abstract" : [
    {
      "text" : "A view with exactly 4 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView4"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView5": {
  "abstract" : [
    {
      "text" : "A view with exactly 5 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView5"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView6": {
  "abstract" : [
    {
      "text" : "A view with exactly 6 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView6"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView7": {
  "abstract" : [
    {
      "text" : "A view with exactly 7 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView7"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView8": {
  "abstract" : [
    {
      "text" : "A view with exactly 8 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView8"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VariadicView9": {
  "abstract" : [
    {
      "text" : "A view with exactly 9 children. Autogenerated as an alternative to Swift’s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariadicView9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariadicView9"
    }
  ],
  "role" : "symbol",
  "title" : "VariadicView9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/variadicview9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View": {
  "abstract" : [
    {
      "text" : "A view that can be rendered by any backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "role" : "symbol",
  "title" : "View",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder": {
  "abstract" : [
    {
      "text" : "A result builder used to compose views together into composite views in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a declarative manner.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "ViewBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewContent": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewContent"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewContent"
    }
  ],
  "role" : "symbol",
  "title" : "ViewContent",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewcontent"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraph": {
  "abstract" : [
    {
      "text" : "The root of the view graph which shadows a root view’s structure with extra metadata,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "cross-update state persistence, and behind the scenes backend widget handling.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode": {
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a view graph node. This is implemented by a few different",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types for various purposes. E.g. variable length with same-typed elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "), and fixed length with distinctly-typed elements (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", etc).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren1": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 1 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren1"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren10": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 10 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView10",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren10"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren2": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 2 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren2"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren3": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 3 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView3",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren3"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren4": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 4 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView4",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren4"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren5": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 5 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView5",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren5"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren6": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 6 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView6",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren6"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren7": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 7 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView7",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren7"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren8": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 8 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView8",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren8"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren9": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 9 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VariadicView9",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren9"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewState": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewState"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewState"
    }
  ],
  "role" : "symbol",
  "title" : "ViewState",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewstate"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroup": {
  "abstract" : [
    {
      "text" : "A scene that presents a group of identically structured windows. Currently",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "only supports having a single instance of the window but will eventually",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "support duplicating the window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroup",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroup"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroupNode": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " corresponding to a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " scene. Holds",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the scene’s view graph and window handle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroupNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroupnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowResizability": {
  "abstract" : [
    {
      "text" : "The level of resizability of a window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowResizability"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowResizability",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowResizability"
    }
  ],
  "role" : "symbol",
  "title" : "WindowResizability",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowresizability"
}
}
}